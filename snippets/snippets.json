{
  "console.log": {
    "prefix": "cl",
    "body": ["console.log($0);"],
    "description": "console.log"
  },
  "console.log with construction": {
    "prefix": "clo",
    "body": ["console.log({$0});"],
    "description": "console.log with construction object"
  },
  "className": {
    "prefix": "cln",
    "body": ["className={styles.$1}$0"],
    "description": "react className"
  },
  "style": {
    "prefix": "sty",
    "body": ["style={{ $1 }}"],
    "description": "react style attribute"
  },
  "useState": {
    "prefix": "us",
    "body": ["const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState($2);$0"],
    "description": "React useState() hook"
  },
  "useEffect": {
    "prefix": "ue",
    "body": ["useEffect(() => {", "\t$1", "}, [$2]);$0"],
    "description": "React useEffect() hook"
  },
  "useCallback": {
    "prefix": "uk",
    "body": ["const $1 = useCallback(() => {", "\t$2", "\t},[$3],", ");$0"],
    "description": "React useCallback() hook"
  },
  "useMemo": {
    "prefix": "um",
    "body": ["const $1 = useMemo(() => {", "\t$2", "}, [$3]);$0"],
    "description": "React useMemo() hook"
  },
  "useRef": {
    "prefix": "uf",
    "body": ["const $1 = useRef($2);$0"],
    "description": "React useRef() hook"
  },
  "import from": {
    "prefix": "ifo",
    "body": ["import { $1 } from '$2$1';"]
  },
  "import from with default": {
    "prefix": "ifd",
    "body": ["import $1 from '$2$1';"]
  },
  "import react": {
    "prefix": "ir",
    "body": ["import * as React from 'react';$0"]
  },
  "import react with construction": {
    "prefix": "irc",
    "body": ["import React, { $1 } from 'react';$0"]
  },
  "import react-redux hooks": {
    "prefix": "ird",
    "body": ["import { useSelector, useDispatch } from 'react-redux';"]
  },
  "import antd  with construction": {
    "prefix": "iac",
    "body": ["import { $1 } from 'antd';$0"]
  },
  "import classnames": {
    "prefix": "ics",
    "body": ["import classNames from 'classnames';$0"]
  },
  "import svg": {
    "prefix": "isg",
    "body": [
      "import { ReactComponent as ${1/(.*)/${1:/capitalize}/}Svg } from '$2$1.svg';$0"
    ]
  },
  "text ellipsis": {
    "prefix": "els",
    "body": [
      "white-space: nowrap;",
      "text-overflow: ellipsis;",
      "overflow: hidden;",
      "max-width: 10em;"
    ],
    "description": "css ellipsis"
  },
  "cover styles with global": {
    "prefix": "sgl",
    "body": ["& :global($1){", "\t$2", "};$0"]
  },
  "event prevent default and stop prapagation": {
    "prefix": "esp",
    "body": ["e.stopPropagation();", "e.preventDefault();"]
  },
  "react component template": {
    "prefix": "rct",
    "body": [
      "import styles from './index.module.less';",
      "\t\t",
      "const ${1:FC} = () => {",
      "\treturn (",
      "\t\t<div className={styles.wrap}>",
      "\t\t\t $2",
      "\t\t</div>",
      "\t);",
      "};",
      "export default R${1:FC};"
    ]
  },
  "react component template with memo": {
    "prefix": "rctm",
    "body": [
      "import React from 'react';",
      "import styles from './index.module.less';",
      "\t\t",
      "const ${1:FC} = () => {",
      "\treturn (",
      "\t\t<div className={styles.wrap}>",
      "\t\t\t $2",
      "\t\t</div>",
      "\t);",
      "};",
      "export default React.memo(${1:FC});"
    ]
  },
  "redux component template": {
    "prefix": "imdt",
    "body": [
      "import React from 'react';",
      "import styles from './index.module.less';",
      "import { useDispatch, useSelector } from 'react-redux';",
      "import { Dispatch, iRootState } from '../store';",
      "interface Props {",
      "\t",
      "}",
      "const ${1:FC} = (props: Props) => {",
      "\tconst dispatch = useDispatch<Dispatch>();",
      "\tconst $2 = useSelector((state: iRootState) => state.$3);",
      "\treturn (",
      "\t\t",
      "\t);",
      "};",
      "export default React.memo(${1:FC});"
    ]
  }
}
