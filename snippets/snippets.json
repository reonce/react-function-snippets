{
  "console.log": {
    "prefix": "clo",
    "body": ["console.log({$0});"],
    "description": "console.log with construction object"
  },
  "className": {
    "prefix": "cln",
    "body": ["className={styles.$1}$0"],
    "description": "react className"
  },
  "style": {
    "prefix": "sty",
    "body": ["style={{ $1 }}"],
    "description": "react style attribute"
  },
  "text ellipsis": {
    "prefix": "els",
    "body": [
      "white-space: nowrap;",
      "text-overflow: ellipsis;",
      "overflow: hidden;",
      "max-width: 10em;"
    ],
    "description": "css ellipsis"
  },
  "useState": {
    "prefix": "us",
    "body": ["const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState($2);$0"],
    "description": "React useState() hook"
  },
  "useEffect": {
    "prefix": "ue",
    "body": ["useEffect(() => {", "\t$1", "}, [$2]);$0"],
    "description": "React useEffect() hook"
  },
  "useCallback": {
    "prefix": "uc",
    "body": ["const $1 = useCallback(() => {", "\t$2", "\t},[$3],", ");$0"],
    "description": "React useCallback() hook"
  },
  "useMemo": {
    "prefix": "um",
    "body": ["const $1 = useMemo(() => {", "\t$2", "}, [$3]);$0"],
    "description": "React useMemo() hook"
  },
  "useRef": {
    "prefix": "ur",
    "body": ["const $1 = useRef($2);$0"],
    "description": "React useRef() hook"
  },
  "import from": {
    "prefix": "imf",
    "body": ["import $1 from '$2$1';"]
  },
  "import react": {
    "prefix": "imr",
    "body": ["import * as React from 'react';$0"]
  },
  "import react hooks": {
    "prefix": "irh",
    "body": ["import React, { $1 } from 'react';$0"]
  },
  "import react-redux hooks": {
    "prefix": "ird",
    "body": ["import { useSelector, useDispatch } from 'react-redux';"]
  },
  "antd": {
    "prefix": "iad",
    "body": ["import { $1 } from 'antd';$0"]
  },
  "import classnames": {
    "prefix": "ics",
    "body": ["import classNames from 'classnames';$0"]
  },
  "import svg": {
    "prefix": "isg",
    "body": [
      "import { ReactComponent as ${1/(.*)/${1:/capitalize}/}Svg } from '$2$1.svg';$0"
    ]
  },
  "cover styles with global": {
    "prefix": "sgl",
    "body": ["& :global($1){", "\t$2", "};$0"]
  },
  "event prevent default and stop prapagation": {
    "prefix": "esp",
    "body": ["e.stopPropagation();", "e.preventDefault();"]
  }
  // "react component template": {
  //   "prefix": "imt",
  //   "body": [
  //     "import React from 'react';",
  //     "import styles from './index.module.less';",
  //     "interface Props {",
  //     "\t$2",
  //     "}",
  //     "const ${1:FC} = (props: Props) => {",
  //     "\treturn (",
  //     "\t\t",
  //     "\t);",
  //     "};",
  //     "export default React.memo(${1:FC});"
  //   ]
  // },
  // "redux component template": {
  //   "prefix": "imdt",
  //   "body": [
  //     "import React from 'react';",
  //     "import styles from './index.module.less';",
  //     "import { useDispatch, useSelector } from 'react-redux';",
  //     "import { Dispatch, iRootState } from '../store';",
  //     "interface Props {",
  //     "\t",
  //     "}",
  //     "const ${1:FC} = (props: Props) => {",
  //     "\tconst dispatch = useDispatch<Dispatch>();",
  //     "\tconst $2 = useSelector((state: iRootState) => state.$3);",
  //     "\treturn (",
  //     "\t\t",
  //     "\t);",
  //     "};",
  //     "export default React.memo(${1:FC});"
  //   ]
  // },
  // "unstated-next container template": {
  //   "prefix": "imut",
  //   "body": [
  //     "import { useState } from 'react';",
  //     "import { createContainer } from 'unstated-next';",
  //     "function useCounter() {",
  //     "\tconst [${1}, set${1/(.*)/${1:/capitalize}/}] = useState<any>($2);",
  //     "\treturn { ${1}, set${1/(.*)/${1:/capitalize}/} };",
  //     "};",
  //     "export default createContainer(useCounter);"
  //   ]
  // }
}
